import java.time.LocalDateTime

plugins {
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'maven-publish'
}

subprojects {
    apply plugin: 'java-library'

    group = 'net.bobolabs.messages'
    version = '0.0.1'

    repositories {
        mavenCentral()
        maven { url = 'https://repo.bobolabs.net/repository/maven-public/' }    // :D
    }

    def targetJavaVersion = 17
    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release = targetJavaVersion
        }
    }

    test {
        useJUnitPlatform()
    }

    publishing {
        repositories {
            maven {
                name = 'BoboLabs'
                url = 'https://repo.bobolabs.net/repository/maven-releases/'
                credentials {
                    username = project.property('bobolabs.user')
                    password = project.property('bobolabs.key')
                }
            }
        }
//        publications {
//            shadow(MavenPublication) { publication ->
//                groupId = project.group
//                artifactId = project.name
//                version = project.version
//
//                project..component(publication)
//            }
//        }
    }

    //tasks.jar.enabled = false
    //tasks.build.dependsOn(shadowJar)
}

license {
    header = rootProject.file('HEADER.txt')
    include '**/*.java'

    properties {
        year = LocalDateTime.now().getYear()
        projectName = project.name
    }
}

//shadowJar {
//    archiveBaseName.set(project.name)
//    archiveClassifier.set('')
//
//    from "${project.rootDir}/LICENSE.txt"
//}
